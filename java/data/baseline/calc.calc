Starting parse

Entering state 0

Stack now 0
Reading a token: 
Next token is token CALC_ ([STARTELEMENT] : element=|calc|)
Shifting token CALC_ ([STARTELEMENT] : element=|calc|)
Entering state 1

Stack now 0 1
Reducing stack by rule 2 , 
-> $$ = nterm exprlist ((null))
Entering state 3

Stack now 0 1 3
Reading a token: 
Next token is token EQ_ ([STARTELEMENT] : element=|eq|)
Shifting token EQ_ ([STARTELEMENT] : element=|eq|)
Entering state 7

Stack now 0 1 3 7
Reading a token: 
Next token is token ADD_ ([STARTELEMENT] : element=|add|)
Shifting token ADD_ ([STARTELEMENT] : element=|add|)
Entering state 8

Stack now 0 1 3 7 8
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 8 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|1|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|1|)
Entering state 25

Stack now 0 1 3 7 8 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 8 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|1|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (1)
Entering state 16

Stack now 0 1 3 7 8 16
Reducing stack by rule 11 , 
   $1 = nterm integer (1)
-> $$ = nterm expr (1)
Entering state 19

Stack now 0 1 3 7 8 19
Reading a token: 
Next token is token MUL_ ([STARTELEMENT] : element=|mul|)
Shifting token MUL_ ([STARTELEMENT] : element=|mul|)
Entering state 10

Stack now 0 1 3 7 8 19 10
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 8 19 10 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Entering state 25

Stack now 0 1 3 7 8 19 10 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 8 19 10 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (2)
Entering state 16

Stack now 0 1 3 7 8 19 10 16
Reducing stack by rule 11 , 
   $1 = nterm integer (2)
-> $$ = nterm expr (2)
Entering state 21

Stack now 0 1 3 7 8 19 10 21
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 8 19 10 21 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
Entering state 25

Stack now 0 1 3 7 8 19 10 21 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 8 19 10 21 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (3)
Entering state 16

Stack now 0 1 3 7 8 19 10 21 16
Reducing stack by rule 11 , 
   $1 = nterm integer (3)
-> $$ = nterm expr (3)
Entering state 30

Stack now 0 1 3 7 8 19 10 21 30
Reading a token: 
Next token is token _MUL ([ENDELEMENT] : element=|mul|)
Shifting token _MUL ([ENDELEMENT] : element=|mul|)
Entering state 39

Stack now 0 1 3 7 8 19 10 21 30 39
Reducing stack by rule 7 , 
   $1 = token MUL_ ([STARTELEMENT] : element=|mul|)
   $2 = nterm expr (2)
   $3 = nterm expr (3)
   $4 = token _MUL ([ENDELEMENT] : element=|mul|)
-> $$ = nterm expr (6)
Entering state 28

Stack now 0 1 3 7 8 19 28
Reading a token: 
Next token is token _ADD ([ENDELEMENT] : element=|add|)
Shifting token _ADD ([ENDELEMENT] : element=|add|)
Entering state 37

Stack now 0 1 3 7 8 19 28 37
Reducing stack by rule 5 , 
   $1 = token ADD_ ([STARTELEMENT] : element=|add|)
   $2 = nterm expr (1)
   $3 = nterm expr (6)
   $4 = token _ADD ([ENDELEMENT] : element=|add|)
-> $$ = nterm expr (7)
Entering state 18

Stack now 0 1 3 7 18
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 18 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|7|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|7|)
Entering state 25

Stack now 0 1 3 7 18 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 18 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|7|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (7)
Entering state 16

Stack now 0 1 3 7 18 16
Reducing stack by rule 11 , 
   $1 = nterm integer (7)
-> $$ = nterm expr (7)
Entering state 27

Stack now 0 1 3 7 18 27
Reading a token: 
Next token is token _EQ ([ENDELEMENT] : element=|eq|)
Shifting token _EQ ([ENDELEMENT] : element=|eq|)
Entering state 36

Stack now 0 1 3 7 18 27 36
Reducing stack by rule 4 , 
   $1 = token EQ_ ([STARTELEMENT] : element=|eq|)
   $2 = nterm expr (7)
   $3 = nterm expr (7)
   $4 = token _EQ ([ENDELEMENT] : element=|eq|)
-> $$ = nterm expr (1)
Entering state 15

Stack now 0 1 3 15
Reducing stack by rule 3 , 
   $1 = nterm exprlist ((null))
   $2 = nterm expr (1)
result=1
-> $$ = nterm exprlist ((null))
Entering state 3

Stack now 0 1 3
Reading a token: 
Next token is token EQ_ ([STARTELEMENT] : element=|eq|)
Shifting token EQ_ ([STARTELEMENT] : element=|eq|)
Entering state 7

Stack now 0 1 3 7
Reading a token: 
Next token is token EXP_ ([STARTELEMENT] : element=|exp|)
Shifting token EXP_ ([STARTELEMENT] : element=|exp|)
Entering state 12

Stack now 0 1 3 7 12
Reading a token: 
Next token is token EXP_ ([STARTELEMENT] : element=|exp|)
Shifting token EXP_ ([STARTELEMENT] : element=|exp|)
Entering state 12

Stack now 0 1 3 7 12 12
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 12 12 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Entering state 25

Stack now 0 1 3 7 12 12 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 12 12 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (2)
Entering state 16

Stack now 0 1 3 7 12 12 16
Reducing stack by rule 11 , 
   $1 = nterm integer (2)
-> $$ = nterm expr (2)
Entering state 23

Stack now 0 1 3 7 12 12 23
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 12 12 23 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
Entering state 25

Stack now 0 1 3 7 12 12 23 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 12 12 23 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|2|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (2)
Entering state 16

Stack now 0 1 3 7 12 12 23 16
Reducing stack by rule 11 , 
   $1 = nterm integer (2)
-> $$ = nterm expr (2)
Entering state 32

Stack now 0 1 3 7 12 12 23 32
Reading a token: 
Next token is token _EXP ([ENDELEMENT] : element=|exp|)
Shifting token _EXP ([ENDELEMENT] : element=|exp|)
Entering state 41

Stack now 0 1 3 7 12 12 23 32 41
Reducing stack by rule 9 , 
   $1 = token EXP_ ([STARTELEMENT] : element=|exp|)
   $2 = nterm expr (2)
   $3 = nterm expr (2)
   $4 = token _EXP ([ENDELEMENT] : element=|exp|)
-> $$ = nterm expr (0)
Entering state 23

Stack now 0 1 3 7 12 23
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 12 23 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
Entering state 25

Stack now 0 1 3 7 12 23 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 12 23 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|3|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (3)
Entering state 16

Stack now 0 1 3 7 12 23 16
Reducing stack by rule 11 , 
   $1 = nterm integer (3)
-> $$ = nterm expr (3)
Entering state 32

Stack now 0 1 3 7 12 23 32
Reading a token: 
Next token is token _EXP ([ENDELEMENT] : element=|exp|)
Shifting token _EXP ([ENDELEMENT] : element=|exp|)
Entering state 41

Stack now 0 1 3 7 12 23 32 41
Reducing stack by rule 9 , 
   $1 = token EXP_ ([STARTELEMENT] : element=|exp|)
   $2 = nterm expr (0)
   $3 = nterm expr (3)
   $4 = token _EXP ([ENDELEMENT] : element=|exp|)
-> $$ = nterm expr (3)
Entering state 18

Stack now 0 1 3 7 18
Reading a token: 
Next token is token INT_ ([STARTELEMENT] : element=|int|)
Shifting token INT_ ([STARTELEMENT] : element=|int|)
Entering state 14

Stack now 0 1 3 7 18 14
Reading a token: 
Next token is token ATTR_N ([ATTRIBUTE] : name=|n| value=|64|)
Shifting token ATTR_N ([ATTRIBUTE] : name=|n| value=|64|)
Entering state 25

Stack now 0 1 3 7 18 14 25
Reading a token: 
Next token is token _INT ([ENDELEMENT] : element=|int|)
Shifting token _INT ([ENDELEMENT] : element=|int|)
Entering state 34

Stack now 0 1 3 7 18 14 25 34
Reducing stack by rule 13 , 
   $1 = token INT_ ([STARTELEMENT] : element=|int|)
   $2 = token ATTR_N ([ATTRIBUTE] : name=|n| value=|64|)
   $3 = token _INT ([ENDELEMENT] : element=|int|)
-> $$ = nterm integer (64)
Entering state 16

Stack now 0 1 3 7 18 16
Reducing stack by rule 11 , 
   $1 = nterm integer (64)
-> $$ = nterm expr (64)
Entering state 27

Stack now 0 1 3 7 18 27
Reading a token: 
Next token is token _EQ ([ENDELEMENT] : element=|eq|)
Shifting token _EQ ([ENDELEMENT] : element=|eq|)
Entering state 36

Stack now 0 1 3 7 18 27 36
Reducing stack by rule 4 , 
   $1 = token EQ_ ([STARTELEMENT] : element=|eq|)
   $2 = nterm expr (3)
   $3 = nterm expr (64)
   $4 = token _EQ ([ENDELEMENT] : element=|eq|)
-> $$ = nterm expr (0)
Entering state 15

Stack now 0 1 3 15
Reducing stack by rule 3 , 
   $1 = nterm exprlist ((null))
   $2 = nterm expr (0)
result=0
-> $$ = nterm exprlist ((null))
Entering state 3

Stack now 0 1 3
Reading a token: 
Next token is token _CALC ([ENDELEMENT] : element=|calc|)
Shifting token _CALC ([ENDELEMENT] : element=|calc|)
Entering state 6

Stack now 0 1 3 6
Reducing stack by rule 1 , 
   $1 = token CALC_ ([STARTELEMENT] : element=|calc|)
   $2 = nterm exprlist ((null))
   $3 = token _CALC ([ENDELEMENT] : element=|calc|)
-> $$ = nterm calc ((null))
Entering state 2

Stack now 0 2
Reading a token: 
Now at end of input.

Shifting token $end ([ENDDOCUMENT] )
Entering state 4

Stack now 0 2 4
No error
